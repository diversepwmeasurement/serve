jobs:
  build:
    name: Lint changed files
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Install lint utilities
      run: 'pip install pre-commit

        pre-commit install

        '
    - continue-on-error: true
      id: changed-files
      name: Get changed files
      uses: tj-actions/changed-files@v41.0.0
      with:
        files: '**/*.py

          '
    - continue-on-error: true
      name: Lint all changed files
      run: "for file in ${{ steps.changed-files.outputs.all_changed_files }}; do\n\
        \  pre-commit run --files $file\ndone\n"
    - continue-on-error: true
      if: ${{ failure() }}
      name: What to do if this action fails
      run: 'echo "You need to lint your code with pre-commit"

        echo "pip install pre-commit"

        echo "cd serve/"

        echo "pre-commit install"

        echo "pre-commit will lint your code for you, so git add and commit those
        new changes and this check should become green"

        echo "If you''ve already pushed some files remotely then run git diff --name-only
        main | xargs pre-commit run --files"

        '
  mypy:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Setup Python 3.9
      uses: actions/setup-python@v5
      with:
        architecture: x64
        python-version: 3.9
    - continue-on-error: true
      name: Checkout TorchServe
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Install mypy
      run: 'pip install mypy

        '
    - continue-on-error: true
      env:
        MYPY_FORCE_COLOR: 1
        TERM: xterm-color
      name: Run mypy
      run: "set -eux\nSTATUS=\nif ! mypy --config=mypy.ini; then\n  STATUS=fail\n\
        fi\nif [ -n \"$STATUS\" ]; then\n  echo 'Please fix the above mypy warnings.'\n\
        \  false\nfi\n"
  spellcheck:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Install dependencies
      run: 'sudo apt-get install aspell aspell-en

        pip install pyspelling

        '
    - continue-on-error: true
      id: changed-files
      name: Get changed files
      uses: tj-actions/changed-files@v41.0.0
      with:
        files: '**/*.md

          '
    - continue-on-error: true
      name: Check spellings
      run: "sources=\"\"\nfor file in ${{ steps.changed-files.outputs.all_changed_files\
        \ }}; do\n  sources=\"${sources} -S $file\"\ndone\nif [ ! \"$sources\" ];\
        \ then\n  echo \"No files to spellcheck\"\nelse\n  pyspelling -c $GITHUB_WORKSPACE/ts_scripts/spellcheck_conf/spellcheck.yaml\
        \ --name Markdown $sources\nfi\n"
    - continue-on-error: true
      if: ${{ failure() }}
      name: In the case of misspellings
      run: 'echo "Please fix the misspellings. If you are sure about some of them,
        "

        echo "so append those to ts_scripts/spellcheck_conf/wordlist.txt"

        '
name: Lint
on:
  repository_dispatch:
    types: trigger-ga___lint.yml
